// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: utils/pb/jobseeker/jobseeker.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	JobSeeker_CreateJobseeker_FullMethodName        = "/job.JobSeeker/CreateJobseeker"
	JobSeeker_CreateJobSeekerProfile_FullMethodName = "/job.JobSeeker/CreateJobSeekerProfile"
	JobSeeker_GetJobseekerProfile_FullMethodName    = "/job.JobSeeker/GetJobseekerProfile"
	JobSeeker_LoginJobseeker_FullMethodName         = "/job.JobSeeker/LoginJobseeker"
	JobSeeker_FollowEmployer_FullMethodName         = "/job.JobSeeker/FollowEmployer"
	JobSeeker_UnFollowEmployer_FullMethodName       = "/job.JobSeeker/UnFollowEmployer"
	JobSeeker_GetFollowingEmployers_FullMethodName  = "/job.JobSeeker/GetFollowingEmployers"
	JobSeeker_GetJobseeker_FullMethodName           = "/job.JobSeeker/GetJobseeker"
	JobSeeker_GetJobseekers_FullMethodName          = "/job.JobSeeker/GetJobseekers"
)

// JobSeekerClient is the client API for JobSeeker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobSeekerClient interface {
	CreateJobseeker(ctx context.Context, in *CreateJobseekerReq, opts ...grpc.CallOption) (*CreateJobseekerRes, error)
	CreateJobSeekerProfile(ctx context.Context, in *JobSeekerProfileReq, opts ...grpc.CallOption) (*JobSeekerProfileRes, error)
	GetJobseekerProfile(ctx context.Context, in *JobSeekerID, opts ...grpc.CallOption) (*JobSeekerProfileRes, error)
	LoginJobseeker(ctx context.Context, in *JSLoginReq, opts ...grpc.CallOption) (*CreateJobseekerRes, error)
	FollowEmployer(ctx context.Context, in *FollowEmployerReq, opts ...grpc.CallOption) (*EmployerRes, error)
	UnFollowEmployer(ctx context.Context, in *FollowEmployerReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetFollowingEmployers(ctx context.Context, in *JobSeekerID, opts ...grpc.CallOption) (*Employers, error)
	GetJobseeker(ctx context.Context, in *JobSeekerID, opts ...grpc.CallOption) (*CreateJobseekerRes, error)
	GetJobseekers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Jobseekers, error)
}

type jobSeekerClient struct {
	cc grpc.ClientConnInterface
}

func NewJobSeekerClient(cc grpc.ClientConnInterface) JobSeekerClient {
	return &jobSeekerClient{cc}
}

func (c *jobSeekerClient) CreateJobseeker(ctx context.Context, in *CreateJobseekerReq, opts ...grpc.CallOption) (*CreateJobseekerRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateJobseekerRes)
	err := c.cc.Invoke(ctx, JobSeeker_CreateJobseeker_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobSeekerClient) CreateJobSeekerProfile(ctx context.Context, in *JobSeekerProfileReq, opts ...grpc.CallOption) (*JobSeekerProfileRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobSeekerProfileRes)
	err := c.cc.Invoke(ctx, JobSeeker_CreateJobSeekerProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobSeekerClient) GetJobseekerProfile(ctx context.Context, in *JobSeekerID, opts ...grpc.CallOption) (*JobSeekerProfileRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(JobSeekerProfileRes)
	err := c.cc.Invoke(ctx, JobSeeker_GetJobseekerProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobSeekerClient) LoginJobseeker(ctx context.Context, in *JSLoginReq, opts ...grpc.CallOption) (*CreateJobseekerRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateJobseekerRes)
	err := c.cc.Invoke(ctx, JobSeeker_LoginJobseeker_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobSeekerClient) FollowEmployer(ctx context.Context, in *FollowEmployerReq, opts ...grpc.CallOption) (*EmployerRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(EmployerRes)
	err := c.cc.Invoke(ctx, JobSeeker_FollowEmployer_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobSeekerClient) UnFollowEmployer(ctx context.Context, in *FollowEmployerReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, JobSeeker_UnFollowEmployer_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobSeekerClient) GetFollowingEmployers(ctx context.Context, in *JobSeekerID, opts ...grpc.CallOption) (*Employers, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Employers)
	err := c.cc.Invoke(ctx, JobSeeker_GetFollowingEmployers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobSeekerClient) GetJobseeker(ctx context.Context, in *JobSeekerID, opts ...grpc.CallOption) (*CreateJobseekerRes, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateJobseekerRes)
	err := c.cc.Invoke(ctx, JobSeeker_GetJobseeker_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobSeekerClient) GetJobseekers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Jobseekers, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Jobseekers)
	err := c.cc.Invoke(ctx, JobSeeker_GetJobseekers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobSeekerServer is the server API for JobSeeker service.
// All implementations must embed UnimplementedJobSeekerServer
// for forward compatibility.
type JobSeekerServer interface {
	CreateJobseeker(context.Context, *CreateJobseekerReq) (*CreateJobseekerRes, error)
	CreateJobSeekerProfile(context.Context, *JobSeekerProfileReq) (*JobSeekerProfileRes, error)
	GetJobseekerProfile(context.Context, *JobSeekerID) (*JobSeekerProfileRes, error)
	LoginJobseeker(context.Context, *JSLoginReq) (*CreateJobseekerRes, error)
	FollowEmployer(context.Context, *FollowEmployerReq) (*EmployerRes, error)
	UnFollowEmployer(context.Context, *FollowEmployerReq) (*emptypb.Empty, error)
	GetFollowingEmployers(context.Context, *JobSeekerID) (*Employers, error)
	GetJobseeker(context.Context, *JobSeekerID) (*CreateJobseekerRes, error)
	GetJobseekers(context.Context, *emptypb.Empty) (*Jobseekers, error)
	mustEmbedUnimplementedJobSeekerServer()
}

// UnimplementedJobSeekerServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedJobSeekerServer struct{}

func (UnimplementedJobSeekerServer) CreateJobseeker(context.Context, *CreateJobseekerReq) (*CreateJobseekerRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJobseeker not implemented")
}
func (UnimplementedJobSeekerServer) CreateJobSeekerProfile(context.Context, *JobSeekerProfileReq) (*JobSeekerProfileRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJobSeekerProfile not implemented")
}
func (UnimplementedJobSeekerServer) GetJobseekerProfile(context.Context, *JobSeekerID) (*JobSeekerProfileRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobseekerProfile not implemented")
}
func (UnimplementedJobSeekerServer) LoginJobseeker(context.Context, *JSLoginReq) (*CreateJobseekerRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginJobseeker not implemented")
}
func (UnimplementedJobSeekerServer) FollowEmployer(context.Context, *FollowEmployerReq) (*EmployerRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FollowEmployer not implemented")
}
func (UnimplementedJobSeekerServer) UnFollowEmployer(context.Context, *FollowEmployerReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnFollowEmployer not implemented")
}
func (UnimplementedJobSeekerServer) GetFollowingEmployers(context.Context, *JobSeekerID) (*Employers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowingEmployers not implemented")
}
func (UnimplementedJobSeekerServer) GetJobseeker(context.Context, *JobSeekerID) (*CreateJobseekerRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobseeker not implemented")
}
func (UnimplementedJobSeekerServer) GetJobseekers(context.Context, *emptypb.Empty) (*Jobseekers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobseekers not implemented")
}
func (UnimplementedJobSeekerServer) mustEmbedUnimplementedJobSeekerServer() {}
func (UnimplementedJobSeekerServer) testEmbeddedByValue()                   {}

// UnsafeJobSeekerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobSeekerServer will
// result in compilation errors.
type UnsafeJobSeekerServer interface {
	mustEmbedUnimplementedJobSeekerServer()
}

func RegisterJobSeekerServer(s grpc.ServiceRegistrar, srv JobSeekerServer) {
	// If the following call pancis, it indicates UnimplementedJobSeekerServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&JobSeeker_ServiceDesc, srv)
}

func _JobSeeker_CreateJobseeker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobseekerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobSeekerServer).CreateJobseeker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobSeeker_CreateJobseeker_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobSeekerServer).CreateJobseeker(ctx, req.(*CreateJobseekerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobSeeker_CreateJobSeekerProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobSeekerProfileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobSeekerServer).CreateJobSeekerProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobSeeker_CreateJobSeekerProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobSeekerServer).CreateJobSeekerProfile(ctx, req.(*JobSeekerProfileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobSeeker_GetJobseekerProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobSeekerID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobSeekerServer).GetJobseekerProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobSeeker_GetJobseekerProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobSeekerServer).GetJobseekerProfile(ctx, req.(*JobSeekerID))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobSeeker_LoginJobseeker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JSLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobSeekerServer).LoginJobseeker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobSeeker_LoginJobseeker_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobSeekerServer).LoginJobseeker(ctx, req.(*JSLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobSeeker_FollowEmployer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowEmployerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobSeekerServer).FollowEmployer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobSeeker_FollowEmployer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobSeekerServer).FollowEmployer(ctx, req.(*FollowEmployerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobSeeker_UnFollowEmployer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowEmployerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobSeekerServer).UnFollowEmployer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobSeeker_UnFollowEmployer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobSeekerServer).UnFollowEmployer(ctx, req.(*FollowEmployerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobSeeker_GetFollowingEmployers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobSeekerID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobSeekerServer).GetFollowingEmployers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobSeeker_GetFollowingEmployers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobSeekerServer).GetFollowingEmployers(ctx, req.(*JobSeekerID))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobSeeker_GetJobseeker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobSeekerID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobSeekerServer).GetJobseeker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobSeeker_GetJobseeker_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobSeekerServer).GetJobseeker(ctx, req.(*JobSeekerID))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobSeeker_GetJobseekers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobSeekerServer).GetJobseekers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobSeeker_GetJobseekers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobSeekerServer).GetJobseekers(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// JobSeeker_ServiceDesc is the grpc.ServiceDesc for JobSeeker service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobSeeker_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "job.JobSeeker",
	HandlerType: (*JobSeekerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJobseeker",
			Handler:    _JobSeeker_CreateJobseeker_Handler,
		},
		{
			MethodName: "CreateJobSeekerProfile",
			Handler:    _JobSeeker_CreateJobSeekerProfile_Handler,
		},
		{
			MethodName: "GetJobseekerProfile",
			Handler:    _JobSeeker_GetJobseekerProfile_Handler,
		},
		{
			MethodName: "LoginJobseeker",
			Handler:    _JobSeeker_LoginJobseeker_Handler,
		},
		{
			MethodName: "FollowEmployer",
			Handler:    _JobSeeker_FollowEmployer_Handler,
		},
		{
			MethodName: "UnFollowEmployer",
			Handler:    _JobSeeker_UnFollowEmployer_Handler,
		},
		{
			MethodName: "GetFollowingEmployers",
			Handler:    _JobSeeker_GetFollowingEmployers_Handler,
		},
		{
			MethodName: "GetJobseeker",
			Handler:    _JobSeeker_GetJobseeker_Handler,
		},
		{
			MethodName: "GetJobseekers",
			Handler:    _JobSeeker_GetJobseekers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "utils/pb/jobseeker/jobseeker.proto",
}
