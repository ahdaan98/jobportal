// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: utils/pb/employer/employer.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateEmployerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Phone    string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Address  string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Country  string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Website  string `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
}

func (x *CreateEmployerReq) Reset() {
	*x = CreateEmployerReq{}
	mi := &file_utils_pb_employer_employer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEmployerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmployerReq) ProtoMessage() {}

func (x *CreateEmployerReq) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_employer_employer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmployerReq.ProtoReflect.Descriptor instead.
func (*CreateEmployerReq) Descriptor() ([]byte, []int) {
	return file_utils_pb_employer_employer_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEmployerReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEmployerReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateEmployerReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateEmployerReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateEmployerReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateEmployerReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateEmployerReq) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

type EmployerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email     string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone     string                 `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Address   string                 `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Country   string                 `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Website   string                 `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
	Createdat *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdat,proto3" json:"createdat,omitempty"`
	Updatedat *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedat,proto3" json:"updatedat,omitempty"`
}

func (x *EmployerRes) Reset() {
	*x = EmployerRes{}
	mi := &file_utils_pb_employer_employer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmployerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployerRes) ProtoMessage() {}

func (x *EmployerRes) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_employer_employer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployerRes.ProtoReflect.Descriptor instead.
func (*EmployerRes) Descriptor() ([]byte, []int) {
	return file_utils_pb_employer_employer_proto_rawDescGZIP(), []int{1}
}

func (x *EmployerRes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmployerRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmployerRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmployerRes) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *EmployerRes) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EmployerRes) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *EmployerRes) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *EmployerRes) GetCreatedat() *timestamppb.Timestamp {
	if x != nil {
		return x.Createdat
	}
	return nil
}

func (x *EmployerRes) GetUpdatedat() *timestamppb.Timestamp {
	if x != nil {
		return x.Updatedat
	}
	return nil
}

type EmpLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *EmpLoginReq) Reset() {
	*x = EmpLoginReq{}
	mi := &file_utils_pb_employer_employer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmpLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmpLoginReq) ProtoMessage() {}

func (x *EmpLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_employer_employer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmpLoginReq.ProtoReflect.Descriptor instead.
func (*EmpLoginReq) Descriptor() ([]byte, []int) {
	return file_utils_pb_employer_employer_proto_rawDescGZIP(), []int{2}
}

func (x *EmpLoginReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmpLoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type EmployerDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Employer        *EmployerRes `protobuf:"bytes,1,opt,name=Employer,proto3" json:"Employer,omitempty"`
	Followers       int64        `protobuf:"varint,2,opt,name=Followers,proto3" json:"Followers,omitempty"`
	Jobopertunities int64        `protobuf:"varint,3,opt,name=Jobopertunities,proto3" json:"Jobopertunities,omitempty"`
}

func (x *EmployerDetail) Reset() {
	*x = EmployerDetail{}
	mi := &file_utils_pb_employer_employer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmployerDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployerDetail) ProtoMessage() {}

func (x *EmployerDetail) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_employer_employer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployerDetail.ProtoReflect.Descriptor instead.
func (*EmployerDetail) Descriptor() ([]byte, []int) {
	return file_utils_pb_employer_employer_proto_rawDescGZIP(), []int{3}
}

func (x *EmployerDetail) GetEmployer() *EmployerRes {
	if x != nil {
		return x.Employer
	}
	return nil
}

func (x *EmployerDetail) GetFollowers() int64 {
	if x != nil {
		return x.Followers
	}
	return 0
}

func (x *EmployerDetail) GetJobopertunities() int64 {
	if x != nil {
		return x.Jobopertunities
	}
	return 0
}

type EmployerDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Employer []*EmployerDetail `protobuf:"bytes,1,rep,name=employer,proto3" json:"employer,omitempty"`
}

func (x *EmployerDetails) Reset() {
	*x = EmployerDetails{}
	mi := &file_utils_pb_employer_employer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmployerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployerDetails) ProtoMessage() {}

func (x *EmployerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_utils_pb_employer_employer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployerDetails.ProtoReflect.Descriptor instead.
func (*EmployerDetails) Descriptor() ([]byte, []int) {
	return file_utils_pb_employer_employer_proto_rawDescGZIP(), []int{4}
}

func (x *EmployerDetails) GetEmployer() []*EmployerDetail {
	if x != nil {
		return x.Employer
	}
	return nil
}

var File_utils_pb_employer_employer_proto protoreflect.FileDescriptor

var file_utils_pb_employer_employer_proto_rawDesc = []byte{
	0x0a, 0x20, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x72, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x22, 0x9f, 0x02, 0x0a, 0x0b, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x61, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x61, 0x74, 0x22, 0x3f, 0x0a, 0x0b,
	0x45, 0x6d, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x8b, 0x01,
	0x0a, 0x0e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x31, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x52, 0x08, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x75, 0x6e, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x4a, 0x6f, 0x62, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x0f, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x34,
	0x0a, 0x08, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x72, 0x32, 0xd8, 0x01, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x72, 0x12, 0x46, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0d, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x19, 0x2e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x42,
	0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_utils_pb_employer_employer_proto_rawDescOnce sync.Once
	file_utils_pb_employer_employer_proto_rawDescData = file_utils_pb_employer_employer_proto_rawDesc
)

func file_utils_pb_employer_employer_proto_rawDescGZIP() []byte {
	file_utils_pb_employer_employer_proto_rawDescOnce.Do(func() {
		file_utils_pb_employer_employer_proto_rawDescData = protoimpl.X.CompressGZIP(file_utils_pb_employer_employer_proto_rawDescData)
	})
	return file_utils_pb_employer_employer_proto_rawDescData
}

var file_utils_pb_employer_employer_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_utils_pb_employer_employer_proto_goTypes = []any{
	(*CreateEmployerReq)(nil),     // 0: employer.CreateEmployerReq
	(*EmployerRes)(nil),           // 1: employer.EmployerRes
	(*EmpLoginReq)(nil),           // 2: employer.EmpLoginReq
	(*EmployerDetail)(nil),        // 3: employer.EmployerDetail
	(*EmployerDetails)(nil),       // 4: employer.EmployerDetails
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 6: google.protobuf.Empty
}
var file_utils_pb_employer_employer_proto_depIdxs = []int32{
	5, // 0: employer.EmployerRes.createdat:type_name -> google.protobuf.Timestamp
	5, // 1: employer.EmployerRes.updatedat:type_name -> google.protobuf.Timestamp
	1, // 2: employer.EmployerDetail.Employer:type_name -> employer.EmployerRes
	3, // 3: employer.EmployerDetails.employer:type_name -> employer.EmployerDetail
	0, // 4: employer.Employer.CreateEmployer:input_type -> employer.CreateEmployerReq
	2, // 5: employer.Employer.LoginEmployer:input_type -> employer.EmpLoginReq
	6, // 6: employer.Employer.GetEmployers:input_type -> google.protobuf.Empty
	1, // 7: employer.Employer.CreateEmployer:output_type -> employer.EmployerRes
	1, // 8: employer.Employer.LoginEmployer:output_type -> employer.EmployerRes
	4, // 9: employer.Employer.GetEmployers:output_type -> employer.EmployerDetails
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_utils_pb_employer_employer_proto_init() }
func file_utils_pb_employer_employer_proto_init() {
	if File_utils_pb_employer_employer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_utils_pb_employer_employer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_utils_pb_employer_employer_proto_goTypes,
		DependencyIndexes: file_utils_pb_employer_employer_proto_depIdxs,
		MessageInfos:      file_utils_pb_employer_employer_proto_msgTypes,
	}.Build()
	File_utils_pb_employer_employer_proto = out.File
	file_utils_pb_employer_employer_proto_rawDesc = nil
	file_utils_pb_employer_employer_proto_goTypes = nil
	file_utils_pb_employer_employer_proto_depIdxs = nil
}
